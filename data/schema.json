{
  "$schema": "http://json-schema.org/draft-04/schema",
  "description": "Configuration file for coc.nvim",
  "definitions": {
    "languageServerSocket": {
      "type": "object",
      "additionalProperties": false,
      "required": ["port", "filetypes"],
      "properties" : {
        "port": {
          "type": "integer",
          "description": "Port number of socket server"
        },
        "host": {
          "type": "string",
          "default": "127.0.0.1",
          "description": "Host of server"
        },
        "enable": {
          "type": "boolean",
          "default": true
        },
        "forceFullSync": {
          "type": "boolean",
          "default": false
        },
        "filetypes": {
          "type": "array",
          "default": [],
          "description": "Supported filetypes",
          "items": {
            "type": "string"
          }
        },
        "initializationOptions": {
          "type": "object",
          "default": {},
          "description": "initializationOptions passed to languageserver"
        },
        "settings": {
          "type": "object",
          "default": {},
          "description": "Settings of languageserver"
        },
        "configSection": {
          "type": "string",
          "default": {},
          "description": "Config section of languageserver"
        },
        "trace.server": {
          "type": "string",
          "default": "off",
          "enum": ["off", "messages", "verbose"]
        }
      }
    },
    "languageServerModule": {
      "type": "object",
      "required": ["module", "filetypes"],
      "additionalProperties": false,
      "properties": {
        "module": {
          "type": "string",
          "default": "",
          "description": "Absolute path of javascript file, should works in IPC mode"
        },
        "args": {
          "type": "array",
          "default": [],
          "description": "Arguments of module",
          "items": {
            "type": "string"
          }
        },
        "filetypes": {
          "type": "array",
          "default": [],
          "description": "Supported filetypes",
          "items": {
            "type": "string"
          }
        },
        "enable": {
          "type": "boolean",
          "default": true
        },
        "forceFullSync": {
          "type": "boolean",
          "default": false
        },
        "cwd": {
          "type": "string",
          "default": "",
          "description": "Working directory of languageserver, absolute path or relative to workspace folder, use workspace root by default"
        },
        "execArgv": {
          "type": "array",
          "default": ["--nolazy", "--inspect-brk=6045"],
          "description": "Argv passed to node when using module, normally used for debugging",
          "items": {
            "type": "string"
          }
        },
        "initializationOptions": {
          "type": "object",
          "default": {},
          "description": "initializationOptions passed to languageserver"
        },
        "settings": {
          "type": "object",
          "default": {},
          "description": "Settings of languageserver"
        },
        "configSection": {
          "type": "string",
          "default": {},
          "description": "Config section of languageserver"
        },
        "trace.server": {
          "type": "string",
          "default": "off",
          "enum": ["off", "messages", "verbose"]
        }
      }
    },
    "languageServerCommand": {
      "type": "object",
      "required": ["command", "filetypes"],
      "additionalProperties": false,
      "properties": {
        "command": {
          "type": "string",
          "default": "",
          "description": "Executable in $PATH to start languageserver, should not used with module"
        },
        "args": {
          "type": "array",
          "default": [],
          "description": "Arguments of command",
          "items": {
            "type": "string"
          }
        },
        "filetypes": {
          "type": "array",
          "default": [],
          "description": "Supported filetypes",
          "items": {
            "type": "string"
          }
        },
        "enable": {
          "type": "boolean",
          "default": true
        },
        "forceFullSync": {
          "type": "boolean",
          "default": false
        },
        "execArgv": {
          "type": "array",
          "default": ["--nolazy", "--inspect-brk=6045"],
          "description": "Args passed to node, only available when args contains --node-ipc",
          "items": {
            "type": "string"
          }
        },
        "cwd": {
          "type": "string",
          "default": "",
          "description": "Working directory of languageserver, absolute path or relative to workspace folder, use workspace root by default"
        },
        "detached": {
          "type": "boolean",
          "default": false,
          "description": "Detach the languageserver process"
        },
        "shell": {
          "type": "boolean",
          "default": false,
          "description": "Use shell for process"
        },
        "initializationOptions": {
          "type": "object",
          "default": {},
          "description": "initializationOptions passed to languageserver"
        },
        "settings": {
          "type": "object",
          "default": {},
          "description": "Settings of languageserver"
        },
        "configSection": {
          "type": "string",
          "default": {},
          "description": "Config section of languageserver"
        },
        "trace.server": {
          "type": "string",
          "default": "off",
          "enum": ["off", "messages", "verbose"]
        }
      }
    }
  },
  "properties": {
    "coc.preferences.autoTrigger": {
      "type": "string",
      "default": "always",
      "description": "How should completion be triggered",
      "enum": ["always", "trigger", "none"]
    },
    "coc.preferences.checkEmpty": {
      "type": "boolean",
      "default": true,
      "description": "check if extensions empty"
    },
    "coc.preferences.languageSourcePriority": {
      "type": "number",
      "default": 9,
      "description": "Priority of language sources."
    },
    "coc.preferences.maxCompleteItemCount": {
      "type": "number",
      "default": 50,
      "description": "Maxmium number of complete items shown in vim"
    },
    "coc.preferences.triggerAfterInsertEnter": {
      "type": "boolean",
      "description": "Trigger completion after InsertEnter, auto trigger should be always to enable this option",
      "default": true
    },
    "coc.preferences.timeout": {
      "type": "integer",
      "default": 300,
      "description": "Timeout for completion"
    },
    "coc.preferences.noselect": {
      "type": "boolean",
      "description": "Not make vim select first item on completion start",
      "default": true
    },
    "coc.preferences.formatOnSaveFiletypes": {
      "type": "array",
      "default": [],
      "description": "Filetypes that should run format on save.",
      "items": {
        "type": "string"
      }
    },
    "coc.preferences.watchmanPath": {
      "type": "string",
      "description": "executable path for https://facebook.github.io/watchman/, detected from $PATH by default",
      "default": ""
    },
    "coc.preferences.customSources": {
      "type": "array",
      "description": "Source names used for coc-complete-custom",
      "default": ["word", "emoji", "include"],
      "items": {
        "type": "string"
      }
    },
    "coc.preferences.jumpCommand": {
      "type": "string",
      "description": "Command used for location jump, like goto definition, goto references etc.",
      "default": "edit",
      "enum": ["edit", "split", "vsplit", "tabe"]
    },
    "coc.preferences.diagnostic.enable": {
      "type": "boolean",
      "description": "Set to false to disable diagnostic",
      "default": true
    },
    "coc.preferences.snippets.enable": {
      "type": "boolean",
      "description": "Set to false to disable snippets",
      "default": true
    },
    "coc.preferences.diagnostic.enableMessage": {
      "type": "boolean",
      "description": "Set to false to disable echo message on CursorMove",
      "default": true
    },
    "coc.preferences.diagnostic.locationlist": {
      "type": "boolean",
      "description": "Create location list for error & warning",
      "default": true
    },
    "coc.preferences.diagnostic.highlightOffset": {
      "type": "number",
      "description": "Offset number of buffer.addHighlight, neovim only.",
      "default": 1000
    },
    "coc.preferences.diagnostic.signOffset": {
      "type": "number",
      "description": "Offset number of sign",
      "default": 1000
    },
    "coc.preferences.diagnostic.errorSign": {
      "type": "string",
      "description": "Text of error sign",
      "default": ">>"
    },
    "coc.preferences.diagnostic.warningSign": {
      "type": "string",
      "description": "Text of warning sign",
      "default": "âš "
    },
    "coc.preferences.diagnostic.infoSign": {
      "type": "string",
      "description": "Text of info sign",
      "default": ">>"
    },
    "coc.preferences.diagnostic.hintSign": {
      "type": "string",
      "description": "Text of hint sign",
      "default": ">>"
    },
    "coc.source.around.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.around.shortcut": {
      "type": "string",
      "default": "A"
    },
    "coc.source.around.priority": {
      "type": "integer",
      "default": 1
    },
    "coc.source.buffer.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.buffer.shortcut": {
      "type": "string",
      "default": "B"
    },
    "coc.source.buffer.priority": {
      "type": "integer",
      "default": 1
    },
    "coc.source.buffer.ignoreGitignore": {
      "type": "boolean",
      "default": true,
      "description": "Ignore git ignored files for buffer words"
    },
    "coc.source.dictionary.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.dictionary.shortcut": {
      "type": "string",
      "default": "D"
    },
    "coc.source.dictionary.priority": {
      "type": "integer",
      "default": 1
    },
    "coc.source.emoji.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.emoji.shortcut": {
      "type": "string",
      "default": "EMO"
    },
    "coc.source.emoji.priority": {
      "type": "integer",
      "default": 9
    },
    "coc.source.emoji.filetypes": {
      "type": "array",
      "default": ["markdown"],
      "items": {
        "type": "string"
      }
    },
    "coc.source.emoji.triggerCharacters": {
      "type": "array",
      "default": [":"],
      "items": {
        "type": "string"
      }
    },
    "coc.source.file.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.file.shortcut": {
      "type": "string",
      "default": "F"
    },
    "coc.source.file.priority": {
      "type": "integer",
      "default": 10
    },
    "coc.source.file.triggerCharacters": {
      "type": "array",
      "default": [ "/" ],
      "items": {
        "type": "string"
      }
    },
    "coc.source.file.trimSameExts": {
      "type": "array",
      "default": [".ts", ".js"],
      "description": "Trim same extension on file completion",
      "items": {
        "type": "string"
      }
    },
    "coc.source.file.ignoreHidden": {
      "type": "boolean",
      "default": true,
      "description": "Ignore completion for hidden files"
    },
    "coc.source.file.ignorePatterns": {
      "type": "array",
      "default": [],
      "description": "Ignore patterns of matcher",
      "items": {
        "type": "string"
      }
    },
    "coc.source.include.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.include.shortcut": {
      "type": "string",
      "default": "I"
    },
    "coc.source.include.priority": {
      "type": "integer",
      "default": 10
    },
    "coc.source.include.triggerCharacters": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      }
    },
    "coc.source.include.trimSameExts": {
      "type": "array",
      "default": [ ".ts", ".js" ],
      "items": {
        "type": "string"
      }
    },
    "coc.source.include.listFileCommand": {
      "type": "string",
      "default": "rg --color never --files",
      "description": "Command for list files"
    },
    "coc.source.omni.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.omni.shortcut": {
      "type": "string",
      "default": "O"
    },
    "coc.source.omni.priority": {
      "type": "integer",
      "default": 3
    },
    "coc.source.omni.filetypes": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      }
    },
    "coc.source.tag.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.tag.shortcut": {
      "type": "string",
      "default": "T"
    },
    "coc.source.tag.priority": {
      "type": "integer",
      "default": 3
    },
    "coc.source.word.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.word.shortcut": {
      "type": "string",
      "default": "10k"
    },
    "coc.source.word.priority": {
      "type": "integer",
      "default": 0
    },
    "coc.source.neosnippet.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.neosnippet.priority": {
      "type": "integer",
      "default": 3
    },
    "coc.source.neosnippet.shortcut": {
      "type": "string",
      "default": "US"
    },
    "coc.source.ultisnips.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.ultisnips.priority": {
      "type": "integer",
      "default": 3
    },
    "coc.source.ultisnips.shortcut": {
      "type": "string",
      "default": "US"
    },
    "coc.source.neco.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.neco.shortcut": {
      "type": "string",
      "default": "NECO"
    },
    "coc.source.neco.priority": {
      "type": "integer",
      "default": 9
    },
    "coc.source.neco.filetypes": {
      "type": "array",
      "default": [ "vim" ],
      "items": {
        "type": "string"
      }
    },
    "coc.source.neco.triggerCharacters": {
      "type": "array",
      "default": [ ":", "&" ],
      "items": {
        "type": "string"
      }
    },
    "coc.source.neco.firstMatch": {
      "type": "boolean",
      "default": true,
      "description": "First letter of complete item should match"
    },
    "coc.source.gocode.enable": {
      "type": "boolean",
      "default": true
    },
    "coc.source.gocode.priority": {
      "type": "integer",
      "default": 99
    },
    "coc.source.gocode.shortcut": {
      "type": "string",
      "default": "GOC"
    },
    "coc.source.gocode.gocodeBinary": {
      "type": "string",
      "default": "",
      "description": "Binary full path of gocode executable"
    },
    "coc.source.gocode.filetypes": {
      "type": "array",
      "default": ["go"],
      "items": {
        "type": "string"
      }
    },
    "coc.source.gocode.triggerCharacters": {
      "type": "array",
      "default": [".", ":"],
      "items": {
        "type": "string"
      }
    },
    "http.proxy": {
      "type": "string",
      "default": "",
      "description": "http proxy used for json server"
    },
    "http.proxyStrictSSL": {
      "type": "boolean",
      "default": true
    },
    "languageserver": {
      "type": "object",
      "default": {},
      "description": "List of languageservers",
      "patternProperties": {
        "^[_a-zA-Z]+$": {
          "oneOf": [{
            "$ref": "#/definitions/languageServerModule"
          }, {
          "$ref": "#/definitions/languageServerCommand"
          }, {
          "$ref": "#/definitions/languageServerSocket"
          }]
        }
      }
    }
  }
}
